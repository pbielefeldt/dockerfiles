name: "Build and Push PandocOS Docker Image"

on:
    pull_request:
        branches: [main]
        paths: ["PandocOS/**"]
    push:
        branches: [main]
        paths: ["PandocOS/**"]

env:
    DOCKER_IMAGE_NAME: "pandocos"
    DOCKER_IMAGE_VERSION: "15.6.3"

jobs:
    build:
        #runs-on: opensuse/leap
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  persist-credentials: false

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build Docker image
              id: build_image
              run: |
                  cd PandocOS
                  docker buildx build --platform linux/amd64 --tag ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_VERSION }}_temp --load --pull .

            - name: Save Docker image to archive
              run: docker save ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_VERSION }}_temp -o ${{ env.DOCKER_IMAGE_NAME }}_temp.tar

            - name: Upload Docker image as artifact
              uses: actions/upload-artifact@v4
              with:
                  name: ${{ env.DOCKER_IMAGE_NAME }}_temp_image
                  path: ${{ env.DOCKER_IMAGE_NAME }}_temp.tar

    push:
        needs: build
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  persist-credentials: false

            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Download Docker image artifact
              uses: actions/download-artifact@v4
              with:
                  name: ${{ env.DOCKER_IMAGE_NAME }}_temp_image

            - name: Load Docker image
              run: docker load -i ${{ env.DOCKER_IMAGE_NAME }}_temp.tar

            - name: Tag and push image to Docker Hub
              run: |
                  DOCKERHUB_TAG="${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}"
                  if [ "${{ github.event_name }}" == "pull_request" ]; then
                      DOCKERHUB_VERSION="${{ env.DOCKER_IMAGE_VERSION }}_testing"
                      docker tag ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_VERSION }}_temp ${DOCKERHUB_TAG}:${DOCKERHUB_VERSION}
                  elif [ "${{ github.event_name }}" == "push" ]; then
                      DOCKERHUB_VERSION=${{ env.DOCKER_IMAGE_VERSION }}
                      docker tag ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_VERSION }}_temp ${DOCKERHUB_TAG}:${DOCKERHUB_VERSION}
                      docker tag ${{ env.DOCKER_IMAGE_NAME }}:${{ env.DOCKER_IMAGE_VERSION }}_temp ${DOCKERHUB_TAG}:latest
                  fi
                  docker push ${DOCKERHUB_TAG} --all-tags
